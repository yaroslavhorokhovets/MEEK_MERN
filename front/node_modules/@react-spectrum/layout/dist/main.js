require("./main.css");
var $aBO7d$reactspectrumutils = require("@react-spectrum/utils");
var $aBO7d$reactariautils = require("@react-aria/utils");
var $aBO7d$react = require("react");
var $aBO7d$reactariassr = require("@react-aria/ssr");

function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

$parcel$export(module.exports, "repeat", () => $65aafe8662d00781$export$76d90c956114f2c2);
$parcel$export(module.exports, "minmax", () => $65aafe8662d00781$export$9c1b655deaca4988);
$parcel$export(module.exports, "fitContent", () => $65aafe8662d00781$export$2f0b47b0911ce698);
$parcel$export(module.exports, "Grid", () => $65aafe8662d00781$export$ef2184bd89960b14);
$parcel$export(module.exports, "Flex", () => $a2ef5497697e8437$export$f51f4c4ede09e011);
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ /// <reference types="css-module-types" />
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


const $65aafe8662d00781$var$gridStyleProps = {
    ...(0, $aBO7d$reactspectrumutils.baseStyleProps),
    autoFlow: [
        "gridAutoFlow",
        (0, $aBO7d$reactspectrumutils.passthroughStyle)
    ],
    autoColumns: [
        "gridAutoColumns",
        $65aafe8662d00781$var$gridDimensionValue
    ],
    autoRows: [
        "gridAutoRows",
        $65aafe8662d00781$var$gridDimensionValue
    ],
    areas: [
        "gridTemplateAreas",
        $65aafe8662d00781$var$gridTemplateAreasValue
    ],
    columns: [
        "gridTemplateColumns",
        $65aafe8662d00781$var$gridTemplateValue
    ],
    rows: [
        "gridTemplateRows",
        $65aafe8662d00781$var$gridTemplateValue
    ],
    gap: [
        "gap",
        (0, $aBO7d$reactspectrumutils.dimensionValue)
    ],
    rowGap: [
        "rowGap",
        (0, $aBO7d$reactspectrumutils.dimensionValue)
    ],
    columnGap: [
        "columnGap",
        (0, $aBO7d$reactspectrumutils.dimensionValue)
    ],
    justifyItems: [
        "justifyItems",
        (0, $aBO7d$reactspectrumutils.passthroughStyle)
    ],
    justifyContent: [
        "justifyContent",
        (0, $aBO7d$reactspectrumutils.passthroughStyle)
    ],
    alignItems: [
        "alignItems",
        (0, $aBO7d$reactspectrumutils.passthroughStyle)
    ],
    alignContent: [
        "alignContent",
        (0, $aBO7d$reactspectrumutils.passthroughStyle)
    ]
};
function $65aafe8662d00781$var$Grid(props, ref) {
    let { children: children , ...otherProps } = props;
    let { styleProps: styleProps  } = (0, $aBO7d$reactspectrumutils.useStyleProps)(otherProps, $65aafe8662d00781$var$gridStyleProps);
    styleProps.style.display = "grid"; // inline-grid?
    let domRef = (0, $aBO7d$reactspectrumutils.useDOMRef)(ref);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($aBO7d$react))).createElement("div", {
        ...(0, $aBO7d$reactariautils.filterDOMProps)(otherProps),
        ...styleProps,
        ref: domRef
    }, children);
}
function $65aafe8662d00781$export$76d90c956114f2c2(count, repeat) {
    return `repeat(${count}, ${$65aafe8662d00781$var$gridTemplateValue(repeat)})`;
}
function $65aafe8662d00781$export$9c1b655deaca4988(min, max) {
    return `minmax(${$65aafe8662d00781$var$gridDimensionValue(min)}, ${$65aafe8662d00781$var$gridDimensionValue(max)})`;
}
function $65aafe8662d00781$export$2f0b47b0911ce698(dimension) {
    return `fit-content(${$65aafe8662d00781$var$gridDimensionValue(dimension)})`;
}
function $65aafe8662d00781$var$gridTemplateAreasValue(value) {
    return value.map((v)=>`"${v}"`).join("\n");
}
function $65aafe8662d00781$var$gridDimensionValue(value) {
    if (/^max-content|min-content|minmax|auto|fit-content|repeat|subgrid/.test(value)) return value;
    return (0, $aBO7d$reactspectrumutils.dimensionValue)(value);
}
function $65aafe8662d00781$var$gridTemplateValue(value) {
    if (Array.isArray(value)) return value.map($65aafe8662d00781$var$gridDimensionValue).join(" ");
    return $65aafe8662d00781$var$gridDimensionValue(value);
}
/**
 * A layout container using CSS grid. Supports Spectrum dimensions as values to
 * ensure consistent and adaptive sizing and spacing.
 */ const $65aafe8662d00781$export$ef2184bd89960b14 = /*#__PURE__*/ (0, $aBO7d$react.forwardRef)($65aafe8662d00781$var$Grid);


/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


var $12be0ef8be5abc46$exports = {};

$parcel$export($12be0ef8be5abc46$exports, "flex-container", () => $12be0ef8be5abc46$export$69d7a39fa31a000b, (v) => $12be0ef8be5abc46$export$69d7a39fa31a000b = v);
$parcel$export($12be0ef8be5abc46$exports, "flex", () => $12be0ef8be5abc46$export$97691fbb80847c19, (v) => $12be0ef8be5abc46$export$97691fbb80847c19 = v);
$parcel$export($12be0ef8be5abc46$exports, "flex-gap", () => $12be0ef8be5abc46$export$31a9da8b58047a44, (v) => $12be0ef8be5abc46$export$31a9da8b58047a44 = v);
var $12be0ef8be5abc46$export$69d7a39fa31a000b;
var $12be0ef8be5abc46$export$97691fbb80847c19;
var $12be0ef8be5abc46$export$31a9da8b58047a44;
$12be0ef8be5abc46$export$69d7a39fa31a000b = "flex-container_e15493";
$12be0ef8be5abc46$export$97691fbb80847c19 = "flex_e15493";
$12be0ef8be5abc46$export$31a9da8b58047a44 = "flex-gap_e15493";



const $a2ef5497697e8437$var$flexStyleProps = {
    direction: [
        "flexDirection",
        (0, $aBO7d$reactspectrumutils.passthroughStyle)
    ],
    wrap: [
        "flexWrap",
        $a2ef5497697e8437$var$flexWrapValue
    ],
    justifyContent: [
        "justifyContent",
        $a2ef5497697e8437$var$flexAlignValue
    ],
    alignItems: [
        "alignItems",
        $a2ef5497697e8437$var$flexAlignValue
    ],
    alignContent: [
        "alignContent",
        $a2ef5497697e8437$var$flexAlignValue
    ]
};
function $a2ef5497697e8437$var$Flex(props, ref) {
    let { children: children , ...otherProps } = props;
    let breakpointProvider = (0, $aBO7d$reactspectrumutils.useBreakpoint)();
    let matchedBreakpoints = (breakpointProvider === null || breakpointProvider === void 0 ? void 0 : breakpointProvider.matchedBreakpoints) || [
        "base"
    ];
    let { styleProps: styleProps  } = (0, $aBO7d$reactspectrumutils.useStyleProps)(otherProps);
    let { styleProps: flexStyle  } = (0, $aBO7d$reactspectrumutils.useStyleProps)(otherProps, $a2ef5497697e8437$var$flexStyleProps);
    let domRef = (0, $aBO7d$reactspectrumutils.useDOMRef)(ref);
    let isSSR = (0, $aBO7d$reactariassr.useIsSSR)();
    // If a gap property is specified, and there is no native support or we're in SSR, use a shim.
    // Two divs are required for this: the outer one contains most style properties, and the inner
    // one is the flex container. Each item inside the flex container gets a margin around it based
    // on the gap, and the flex container has a negative margin to counteract this. The outer container
    // is necessary to allow nesting of flex containers with gaps, so that the inner CSS variable doesn't
    // override the outer one.
    if ((props.gap || props.rowGap || props.columnGap) && (isSSR || !$a2ef5497697e8437$var$isFlexGapSupported())) {
        let style = {
            ...flexStyle.style,
            "--column-gap": props.columnGap != null ? (0, $aBO7d$reactspectrumutils.responsiveDimensionValue)(props.columnGap, matchedBreakpoints) : undefined,
            "--row-gap": props.rowGap != null ? (0, $aBO7d$reactspectrumutils.responsiveDimensionValue)(props.rowGap, matchedBreakpoints) : undefined,
            "--gap": props.gap != null ? (0, $aBO7d$reactspectrumutils.responsiveDimensionValue)(props.gap, matchedBreakpoints) : undefined
        };
        return /*#__PURE__*/ (0, ($parcel$interopDefault($aBO7d$react))).createElement("div", {
            ...(0, $aBO7d$reactariautils.filterDOMProps)(otherProps),
            ...styleProps,
            className: (0, $aBO7d$reactspectrumutils.classNames)((0, (/*@__PURE__*/$parcel$interopDefault($12be0ef8be5abc46$exports))), "flex-container", styleProps.className),
            ref: domRef
        }, /*#__PURE__*/ (0, ($parcel$interopDefault($aBO7d$react))).createElement("div", {
            className: (0, $aBO7d$reactspectrumutils.classNames)((0, (/*@__PURE__*/$parcel$interopDefault($12be0ef8be5abc46$exports))), "flex", "flex-gap"),
            style: style
        }, children));
    }
    // If no gaps, or native support exists, then we only need to render a single div.
    let style1 = {
        ...styleProps.style,
        ...flexStyle.style
    };
    if (props.gap != null) style1.gap = (0, $aBO7d$reactspectrumutils.responsiveDimensionValue)(props.gap, matchedBreakpoints);
    if (props.columnGap != null) style1.columnGap = (0, $aBO7d$reactspectrumutils.responsiveDimensionValue)(props.columnGap, matchedBreakpoints);
    if (props.rowGap != null) style1.rowGap = (0, $aBO7d$reactspectrumutils.responsiveDimensionValue)(props.rowGap, matchedBreakpoints);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($aBO7d$react))).createElement("div", {
        ...(0, $aBO7d$reactariautils.filterDOMProps)(otherProps),
        className: (0, $aBO7d$reactspectrumutils.classNames)((0, (/*@__PURE__*/$parcel$interopDefault($12be0ef8be5abc46$exports))), "flex", styleProps.className),
        style: style1,
        ref: domRef
    }, children);
}
/**
 * Normalize 'start' and 'end' alignment values to 'flex-start' and 'flex-end'
 * in flex containers for browser compatibility.
 */ function $a2ef5497697e8437$var$flexAlignValue(value) {
    if (value === "start") return "flex-start";
    if (value === "end") return "flex-end";
    return value;
}
/**
 * Takes a boolean and translates it to flex wrap or nowrap.
 */ function $a2ef5497697e8437$var$flexWrapValue(value) {
    if (typeof value === "boolean") return value ? "wrap" : "nowrap";
    return value;
}
// Original licensing for the following method can be found in the
// NOTICE file in the root directory of this source tree.
// See https://github.com/Modernizr/Modernizr/blob/7efb9d0edd66815fb115fdce95fabaf019ce8db5/feature-detects/css/flexgap.js
let $a2ef5497697e8437$var$_isFlexGapSupported = null;
function $a2ef5497697e8437$var$isFlexGapSupported() {
    if ($a2ef5497697e8437$var$_isFlexGapSupported != null) return $a2ef5497697e8437$var$_isFlexGapSupported;
    if (typeof document === "undefined") return false;
    // create flex container with row-gap set
    var flex = document.createElement("div");
    flex.style.display = "flex";
    flex.style.flexDirection = "column";
    flex.style.rowGap = "1px";
    // create two, elements inside it
    flex.appendChild(document.createElement("div"));
    flex.appendChild(document.createElement("div"));
    // append to the DOM (needed to obtain scrollHeight)
    document.body.appendChild(flex);
    $a2ef5497697e8437$var$_isFlexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap
    flex.parentNode.removeChild(flex);
    return $a2ef5497697e8437$var$_isFlexGapSupported;
}
/**
 * A layout container using flexbox. Provides Spectrum dimension values, and supports the gap
 * property to define consistent spacing between items.
 */ const $a2ef5497697e8437$export$f51f4c4ede09e011 = /*#__PURE__*/ (0, $aBO7d$react.forwardRef)($a2ef5497697e8437$var$Flex);




//# sourceMappingURL=main.js.map
